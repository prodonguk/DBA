(1). 다중 테넌트 DB 설계 및 구축
  목표 : 하나의 데이터베이스에서 여러 고객(테넌트)의 데이터를 분리/관리하는 멀티 테넌시(Multi-tenancy) 구조 설계 및 구현.

  멀티 테넌시란?
    여러 사용자 그룹(테넌트)이 하나의 소프트웨어 인스턴스를 공유하면서도 데이터는 서로 완전히 분리되어 독립적으로 사용하는 구조
    예시) Google Doxs 하나의 시스템을 여러 회사가 사용하지만, 각 회사의 문서는 분리됨.

  멀티 테넌시 구현 방식 비교
  1). DB per Tenant
        각 테넌트마다 독립적인 DB 인스턴스 제공
        장점 : 완전한 격리, 보안 유지
        단점 : 운영/유지보수 복잡, 리소스 증가
  2). Schema per Tenant
        하나의 DB에 테넌트별 Schema 분리
        격리성 + 효율성 => 적절, 관리 => 적절
        단점 : 스키마 수 증가 시 성능 감소
  3). Table per Tenant
        테이블은 하나, tenant_id 칼럼으로 구분
        장점 : 간단하고 고성능
        단점 : 보안 처리 어려움, 관리 복잡
